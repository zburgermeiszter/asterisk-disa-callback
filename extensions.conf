#include extensions_global.conf

[disa-request]
exten => ${TRIGGER_NUMBER},1,Noop(DISA callback request from ${CALLERID(all)})
same => n,GotoIf($[${ISNULL(${CALLERID(num)})}]?busy,s,1)
same => n,GotoIf($[${CALLERID(num)}=${ALLOWED_NUMBER_0}]?:busy,s,1)
same => n,Busy(600)
same => n,Congestion(600)
same => n,Hangup(600)

exten => h,1,Noop(Starting DISA Callback)
same => n,System(sleep 5)
same => n,Originate(SIP/bc-out/${CALLERID(num)},exten,disa-out,${CALLERID(num)})

[disa-out]
exten => _X.,1,Noop(DISA Context Extension for ${EXTEN})
same => n,Set(CALLERID(num)=${EXTEN})

; Play menu

; Read quickdial number of DTMF_CHOICE
same => n(read-choice),Read(DTMF_CHOICE,dial,1,i,1,10)

; If read timeout then hangup
same => n,GotoIf($[${READSTATUS}=OK]?:hup)

; If read number is 0 then go to "call"
same => n,GotoIf($[${DTMF_CHOICE}=0]?call)

; Read number to call from GLOBAL config
same => n,Set(NUMBER_TO_CALL=${QUICKDIAL_${DTMF_CHOICE}})

; Print number to call
same => n(ntc),Noop(NUMBER_TO_CALL: ${NUMBER_TO_CALL})

; Check the number length
same => n,Set(NUMBER_LENGTH=${LEN(${NUMBER_TO_CALL})})

; If Length = 0 then read again else call it
same => n,GotoIf($[${NUMBER_LENGTH}=0]?read-choice:outbound,${NUMBER_TO_CALL},1)

same => n(call),Read(NUMBER_TO_CALL,dial,0,i,1,10)
same => n,Noop(NUMBER_TO_CALL: ${NUMBER_TO_CALL})
same => n,GotoIf($[${READSTATUS}=OK]?outbound,${NUMBER_TO_CALL},1)
;same => n,DISA(no-password,outbound,,, np)
same => n(hup),Hangup()

[outbound]
exten => _X.,1,Set(TIMEOUT(response)=10)
same => n,Noop(CALLERID: ${CALLERID(num)})
same => n,Noop(CALLED: ${EXTEN})
same => n,Noop(Record call: ${RECORD_CALL})
same => n,GotoIf($[${RECORD_CALL} = ON]?record:dial)
same => n(record),Set(RECORD_FILE=${STRFTIME(${EPOCH},,%Y%m%d-%H%M%S)}-${EXTEN})
same => n,Set(CALLFILENAME=${RECORD_PATH}${RECORD_FILE}.${RECORD_FORMAT})
same => n,Noop(CALLFILENAME: ${CALLFILENAME})
same => n,MixMonitor(${CALLFILENAME},b,)
same => n(dial),Dial(SIP/fvd-out/${EXTEN})
same => n,Hangup()

[hangup]
exten => s,1,Hangup(60)

[busy]
exten => s,1,Busy(60)

[hangup-context]
exten => s,1,Busy(60)
exten => s,n,Congestion(60)
exten => s,n,Hangup(60)
exten => i,1,Hangup
exten => t,1,Hangup

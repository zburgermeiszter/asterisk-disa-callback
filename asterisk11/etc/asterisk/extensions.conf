#include extensions_global.conf
#include extensions_internal.conf

; ----------------------------------------------------------------------------------------------------
[general]
  static=yes
  writeprotect=yes
  autofallthrough=yes

; ----------------------------------------------------------------------------------------------------
[default]
	exten => s,1,Hangup()
	exten => i,1,Hangup()

; ----------------------------------------------------------------------------------------------------
[disa-request]
; TODO: This GLOBAL() MUST go away! It's GLOBAL, not CHANNEL!!!
exten => _X.,1,Set(GLOBAL(IE)=${EXTEN})
same => n,Goto(disa-request,s,1)

exten => s,1,Noop(DISA callback request)
same => n,GotoIf($[${ISNULL(${CALLERID(num)})}]?busy,s,1)

same => n,Noop(IncomingExten: ${IE})

; Convert number to international format
same => n,GoSub(international-format,s,1(${CALLERID(num)}))

same => n,Noop((incoming)CALLERID(num): ${CALLERID(num)})
same => n,Noop(INTERNATIONAL_NUMBER: ${INTERNATIONAL_NUMBER})
same => n,Noop(ANI: ${ANI})
same => n,Noop(DNIS: ${DNIS})
same => n,Noop(EXTEN: ${EXTEN})

same => n,Noop(Check if caller is allowed to use the system)
same => n,GoSub(is-caller-allowed,s,1(${INTERNATIONAL_NUMBER}))
same => n,GotoIf($[${GOSUB_RETVAL}]?busy)

; no match
same => n,Noop(NOT ALLOWED NUMBER: ${INTERNATIONAL_NUMBER})
same => n,Goto(busy,s,1)

same => n(busy),Busy(600)
exten => h,1,Goto(disa-call,${INTERNATIONAL_NUMBER},1)

; ----------------------------------------------------------------------------------------------------
[disa-call]
	exten => _X.,1,System(sleep 5)
	same => n,Originate(Local/${EXTEN}@originate-context/n,exten,disa-out,${EXTEN},1)
	same => n,Noop(Originate status: ${ORIGINATE_STATUS})
	same => n,GotoIf($[${ORIGINATE_STATUS} != SUCCESS]?busy,s,1)

; ----------------------------------------------------------------------------------------------------
[originate-context]
	exten => _X.,1,GoSub(sip-dialer,s,1(${EXTEN},${TRUNK_CALLBACK},${EXTEN},${TRUNK_CALLBACK_MAX_CALLS}))

; ----------------------------------------------------------------------------------------------------
[disa-out]
exten => _X.,1,Noop(DISA Context Extension for ${EXTEN})

; Direct callback START
; If not direct callback trigger, then go to read quickdial choice.

; Internationalize IncomingExten (DID number). 0621xxxxxxx => 003621xxxxxxx
same => n,GoSub(international-format,s,1(${IE}))

; Find Callee for DID trigger
same => n,GoSub(find-callee-by-did,s,1(${INTERNATIONAL_NUMBER}))
same => n,Set(NUMBER_TO_CALL=${GOSUB_RETVAL})
same => n,Goto(ntc)
; Direct callback END

; Play menu

; Read quickdial number of DTMF_CHOICE
same => n(read-choice),Read(DTMF_CHOICE,dial,1,i,1,10)

; If read timeout then hangup
same => n,GotoIf($[${READSTATUS}=OK]?:hup)

; If read number is 0 then go to "call"
same => n,GotoIf($[${DTMF_CHOICE}=0]?call)

; Read number to call from GLOBAL config
same => n,Set(NUMBER_TO_CALL=${QUICKDIAL_${DTMF_CHOICE}})

; Print number to call
same => n(ntc),Noop(NUMBER_TO_CALL: ${NUMBER_TO_CALL})

; Check the number length
same => n,Set(NUMBER_LENGTH=${LEN(${NUMBER_TO_CALL})})

; If Length = 0 then read again else call it
same => n,Set(CALLERID(num)=${EXTEN})
same => n,GotoIf($[${NUMBER_LENGTH}=0]?read-choice:outbound,${NUMBER_TO_CALL},1)

same => n(call),Read(NUMBER_TO_CALL,dial,0,i,1,10)
same => n,Noop(NUMBER_TO_CALL: ${NUMBER_TO_CALL})
same => n,GotoIf($[${READSTATUS}=OK]?outbound,${NUMBER_TO_CALL},1)
same => n(hup),Hangup()

; ----------------------------------------------------------------------------------------------------
[outbound]
exten => _X.,1,Set(TIMEOUT(response)=10)
same => n,Set(OUTBOUND_CALLERID=${CALLERID(num)})
same => n,Noop(CALLERID: ${OUTBOUND_CALLERID})
same => n,Noop(CALLED: ${EXTEN})
same => n,Noop(Record call: ${RECORD_CALL})
same => n,GotoIf($[${RECORD_CALL} = ON]?record:dial)
same => n(record),Set(RECORD_FILE=${STRFTIME(${EPOCH},,%Y%m%d-%H%M%S)}-${TRUNK_OUTGOING}-${OUTBOUND_CALLERID}-${EXTEN})
same => n,Set(CALLFILENAME=${RECORD_PATH}${RECORD_FILE}.${RECORD_FORMAT})
same => n,Noop(CALLFILENAME: ${CALLFILENAME})
same => n,MixMonitor(${CALLFILENAME},b,)
same => n(dial),GoSub(sip-dialer,s,1(${OUTBOUND_CALLERID},${TRUNK_OUTGOING},${EXTEN},${TRUNK_OUTGOING_MAX_CALLS}))

; ----------------------------------------------------------------------------------------------------
[hangup]
exten => s,1,Hangup()

; ----------------------------------------------------------------------------------------------------
[busy]
exten => s,1,Busy(60)

; ----------------------------------------------------------------------------------------------------
; Sub to make outbound calls on a SIP trunk with concurrent call limit feature
;	${ARG1} Caller ID
;	${ARG2} Trunk name
;	${ARG3} Called number
;	${ARG4} Max concurrent calls
[sip-dialer]
exten => s,1,Set(OUTBOUND_GROUP=${ARG2})
same => n,Noop(Number of current calls: ${GROUP_COUNT(${ARG2})}, Limit: ${ARG4})
same => n,GotoIf($[${GROUP_COUNT(${ARG2})} >= ${ARG4}]?unavail)
same => n,Set(CALLERID(num)=${ARG1})
same => n,Dial(SIP/${ARG2}/${ARG3}, 600, rgA(beeperr)F(hangup,s,1))
same => n,Goto(end)

same => n(unavail),Noop(${GROUP_COUNT(${ARG2})} concurrent calls limit reached)
same => n,Set(DIALSTATUS=CHANUNAVAIL)
same => n,Busy(60)
same => n(end),Hangup()
same => n,Return()

; ----------------------------------------------------------------------------------------------------
; Sub for transforming local number format to international
;   ${ARG1} - Local number
[international-format]
	exten => s,1,Set(INTERNATIONAL_NUMBER=${ARG1})
	; check if caller ID length = 7
	same => n,GotoIf($[${LEN(${INTERNATIONAL_NUMBER})} = 7]?prefix)
	; if we got caller ID starting with 06
	same => n,GotoIf($[${INTERNATIONAL_NUMBER:0:2} = 06]?intl:return);
	; then prefix it with 061
	same => n(prefix),Set(INTERNATIONAL_NUMBER=061${INTERNATIONAL_NUMBER})
	; cut 06
	same => n(intl),Set(INTERNATIONAL_NUMBER=${INTERNATIONAL_NUMBER:2})
	; prefix with 0036
	same => n,Set(INTERNATIONAL_NUMBER=0036${INTERNATIONAL_NUMBER})
	same => n(return),Noop(INTERNATIONAL_NUMBER: ${INTERNATIONAL_NUMBER})
	same => n,Return()

; ----------------------------------------------------------------------------------------------------
[find-callee-by-did]
exten => s,1,NoOp(GoSub: Find callee by incoming DID number: (${ARG1}))

same => n(start),Set(NUMBER_INDEX=1)
same => n(set-did),Set(DID=${ARG1})

same => n,NoOp(Number Index: ${NUMBER_INDEX})
same => n,NoOp(Trigger: ${DIRECT_CALLBACK_${NUMBER_INDEX}_TRIGGER})
same => n,NoOp(Callee: ${DIRECT_CALLBACK_${NUMBER_INDEX}_CALLEE})
same => n,NoOp(DID: ${DID})

same => n(start-while),While($[${LEN(${DIRECT_CALLBACK_${NUMBER_INDEX}_TRIGGER})} > 0])

same => n,NoOp(Number Index: ${NUMBER_INDEX})

same => n,Set(TRIGGER=${DIRECT_CALLBACK_${NUMBER_INDEX}_TRIGGER})
same => n,Set(CALLEE=${DIRECT_CALLBACK_${NUMBER_INDEX}_CALLEE})

same => n,NoOp(DID: ${DID})
same => n,NoOp(Trigger: ${TRIGGER})
same => n,NoOp(Callee: ${CALLEE})
same => n,NoOp(${DID} = ${TRIGGER})

same => n,ExecIf($[${DID} = ${TRIGGER}]?Return(${CALLEE}):Noop())
same => n,Set(NUMBER_INDEX=$[${NUMBER_INDEX}+1])

same => n(end-while),EndWhile()

same => n,Return()

[is-caller-allowed]
	exten => s,1,NoOp(Check if caller number allowed to use the system)
	same => n(init),Set(CALLER=${ARG1})

	same => n(start),Set(NUMBER_INDEX=1)

	same => n,NoOp(Number Index: ${NUMBER_INDEX})
	same => n,NoOp(Caller: ${CALLER})
	same => n,NoOp(Checked number: ${ALLOWED_NUMBER_${NUMBER_INDEX}})

	same => n(start-while),While($[${LEN(${ALLOWED_NUMBER_${NUMBER_INDEX}})} > 0])

	same => n,Set(CHECKED_NUMBER=${ALLOWED_NUMBER_${NUMBER_INDEX}})
	same => n,NoOp(Number Index: ${NUMBER_INDEX})
	same => n,NoOp(Checked number: ${CHECKED_NUMBER})

	same => n,ExecIf($[${CALLER} = ${CHECKED_NUMBER}]?Return(1):Noop())

	same => n,Set(NUMBER_INDEX=$[${NUMBER_INDEX}+1])

	same => n(end-while),EndWhile()

	same => n,Return(0)